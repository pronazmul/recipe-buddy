<!-- Inclode Navigation Bar for each Page -->
<%- include('./partials/header.ejs') %>

<main class="w-full h-[90vh]">
  <div class="mt-5 grid grid-cols-12 gap-2">
    <!-- Food List -->
    <div class="col-span-12 sm:col-span-6 lg:col-span-8">
      <!-- Food List Table -->
      <div class="container w-full px-4 mx-auto sm:px-8">
        <div class="py-8">
          <div class="flex flex-row justify-between w-full mb-1 sm:mb-0">
            <h2 class="text-2xl leading-tight">Food List</h2>
            <div class="text-end">
              <form
                id="filterForm"
                onsubmit="fetchFood(event)"
                class="flex flex-col justify-center w-3/4 max-w-sm space-y-3 md:flex-row md:w-full md:space-x-3 md:space-y-0"
              >
                <div class="relative">
                  <input
                    type="text"
                    name="filter"
                    id='"form-subscribe-Filter'
                    class="rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent"
                    placeholder="Search By Food name"
                  />
                </div>
                <button
                  class="flex-shrink-0 px-4 py-2 text-base font-semibold text-white bg-blue-600 rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-blue-200"
                  type="submit"
                >
                  Filter
                </button>
              </form>
            </div>
          </div>
          <div class="px-4 py-4 -mx-4 overflow-x-auto sm:-mx-8 sm:px-8">
            <div
              class="inline-block min-w-full overflow-hidden rounded-lg shadow"
            >
              <table class="min-w-full leading-normal">
                <thead>
                  <tr>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Recipe
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Unit
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Weight
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Calories
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Category
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Username
                    </th>
                    <th
                      scope="col"
                      class="px-5 py-3 text-sm font-normal text-left text-gray-800 uppercase bg-white border-b border-gray-200"
                    >
                      Action
                    </th>
                  </tr>
                </thead>
                <tbody id="foodList" class="w-full">
                  <!-- Food List Item Will be dynamically Loaded Here -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Nutrition Chart -->
    <div class="col-span-12 sm:col-span-6 lg:col-span-4">
      <!-- Selected Items -->
      <div
        class="container flex flex-col items-center justify-center w-full mx-auto py-8"
      >
        <div
          class="w-full px-4 py-5 mb-2 bg-white border rounded-md shadow sm:px-6"
        >
          <h3 class="text-lg font-medium leading-6 text-gray-900">
            Selected Food List
          </h3>
          <p class="max-w-2xl mt-1 text-sm text-gray-500">
            Details and informations about selected food items.
          </p>
        </div>
        <ul id="selected-meals" class="w-full space-y-2">
          <!-- Selected Meal List Will be Printed Here -->
        </ul>
      </div>

      <!-- Nutrition Facts -->
      <div
        id="nutritionChart"
        class="container flex flex-col items-center justify-center w-full mx-auto py-8 hidden"
      >
        <div
          class="w-full px-4 py-5 mb-2 bg-white rounded-md shadow sm:px-6 border-2 border-black"
        >
          <h1
            class="font-black text-4xl text-center border-b-8 border-black pb-1.5"
          >
            Nutrition Facts
          </h1>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold">Amount Per Serving</span
            ><span
              ><span id="unit">Gram</span> , <span id="weight"></span
            ></span>
          </p>
          <p class="flex text-sm justify-between border-b-4 border-black">
            <span class="font-bold" id="calories"></span
            ><span id="caloriesFromFat"></span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span></span><span class="font-bold">% Daily Value</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="fat">Total Fat 9.6g</span
            ><span>15%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="cholesterol">Cholesterol 3.5mg</span
            ><span>1%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="water">Water 810mg</span
            ><span>24%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="salt">Salt 2mg</span><span>0.02%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="carbohydrate"
              >Total Carbohydrates 36g</span
            ><span>12%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold" id="protein">Protein 4.3g</span
            ><span></span>
          </p>
          <p class="flex text-sm justify-between border-b-4 border-black">
            <span class="font-bold" id="energy">Energy 4.3kj</span><span></span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold">Calcium</span><span>3.6%</span>
          </p>
          <p class="flex text-sm justify-between border-b border-black">
            <span class="font-bold">Iron</span><span>3.2%</span>
          </p>
          <p class="text-xs text-gray-400 text-center mt-2">
            * parcent Daily Values are based on a 2000 calories diet.
          </p>
        </div>

        <div
          class="w-full px-4 py-5 mb-2 bg-white border rounded-md shadow sm:px-6"
        >
          <canvas id="myChart" class="w-full"></canvas>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  //Dom Selections
  let nutritionChart = document.getElementById('nutritionChart')
  let nothingSelected = document.getElementById('nothingSelected')
  let tableBody = document.getElementById('foodList')

  // Nutritrition Chart Show selectors
  let unitSpan = document.getElementById('unit')
  let weightSpan = document.getElementById('weight')
  let caloriesSpan = document.getElementById('calories')
  let caloriesFromFatSpan = document.getElementById('caloriesFromFat')
  let fatSpan = document.getElementById('fat')
  let cholesterolSpan = document.getElementById('cholesterol')
  let waterSpan = document.getElementById('water')
  let saltSpan = document.getElementById('salt')
  let carbohydrateSpan = document.getElementById('carbohydrate')
  let proteinSpan = document.getElementById('protein')
  let energySpan = document.getElementById('energy')

  const ctx = document.getElementById('myChart').getContext('2d')

  // Toast Message
  function showToast(msg) {
    Toastify({
      text: msg,
      duration: 1000,
    }).showToast()
  }

  // Fetch Food Intems While DOM loaded
  document.addEventListener('DOMContentLoaded', fetchFood)

  // Filter Food By Food Name
  async function fetchFood(event) {
    event.preventDefault()
    let searchInput = document.forms['filterForm']['filter'].value

    // Initally Set Loader Before Fetch
    tableBody.innerHTML = `
        <tr>
          <td colspan='7'>
            <div class='w-full flex justify-center items-center my-8'>
            <div class='animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500'></div>
            </div>
          </td>
        </tr>
            `

    try {
      const response = await fetch(`/food?search=${searchInput}`)
      const data = await response.json()
      const user = response.headers.get('user')

      if (!data.length) {
        tableBody.innerHTML = `
          <tr>
            <td colspan='7' class="p-4 m-4 text-sm text-red-700 bg-red-100 rounded-lg font-medium text-center">No item Found!</td> 
          </tr>`
      } else {
        let foodList = ''
        data.forEach((food, index) => {
          foodList += `
                  <tr id="${food._id}">
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food.name}
                      </p>
                    </td>
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food.unit}
                      </p>
                    </td>
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food.weight}
                      </p>
                    </td>
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food.calories}
                      </p>
                    </td>
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food.category}
                      </p>
                    </td>
                    <td
                      class="px-5 py-5 text-sm bg-white border-b border-gray-200"
                    >
                      <p class="text-gray-900 whitespace-no-wrap">
                        ${food?.user?.username}
                      </p>
                    </td>
                    <td
                      class="px-5 py-6 bg-white border-b border-gray-200 flex space-x-2"
                    >
                      <a id='addMeal' href='#' onclick="addFood('${food._id}')" class="px-4 py-2 text-base font-semibold text-white bg-blue-600 rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-blue-200 cursor-pointer">
                        Add
                      </a>
                    </td>
                  </tr>
        `
        })
        tableBody.innerHTML = foodList
      }

      // Clear Existing Added Meal
      localStorage.clear()
      printSelectedMeal([])
    } catch (error) {
      console.log({ error })
    }
  }

  // Local Storage List Functionalities
  async function addFood(id) {
    try {
      const response = await fetch(`/food/${id}`)
      const data = await response.json()

      let result = lsAddData(data)

      printSelectedMeal(result)
    } catch (error) {
      console.log({ error })
      showToast('Failed to add Meal')
    }
  }

  //Dynamically Print Selected Meal List
  function printSelectedMeal(selectedFoods) {
    let mealList = document.getElementById('selected-meals')
    if (selectedFoods.length === 0) {
      mealList.innerHTML = `
      <div class="p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg">
        <span class="font-medium">Plaese Add Some Food To get Nutrition Chart</span> 
      </div>`

      nutritionChart.classList.add('hidden')
    } else {
      let list = ''
      selectedFoods.forEach((data) => {
        list += `
      <li
            class="w-full p-4 shadow border bg-white rounded-md grid grid-cols-12"
          >
            <div class="col-span-3">
              <div class="font-medium">${data.name
                .split(' ')
                .splice(0, 2)
                .join(' ')}</div>
              <div class="text-sm text-gray-600">${Number(
                data.weight * data.quantity
              ).toFixed(2)} g</div>
            </div>
            <div class="col-span-3">
              <div class="font-medium">Calories</div>
              <div class="text-sm text-gray-600">${Number(
                data.calories * data.quantity
              ).toFixed(2)}</div>
            </div>
            <div class="col-span-3 flex text-lg">
              <div class="w-full flex items-center justify-between">
                <button
                onclick="decreaseQuantity('${data._id}')"
                  class="cursor-pointer px-2 py-0.5 text-white bg-blue-600 rounded-lg shadow-md hover:bg-blue-700"
                >
                  -
                </button>
                <div class="">${data.quantity}</div>
                <button
                onclick="increaseQuantity('${data._id}')"
                  class="cursor-pointer px-2 py-0.5 text-white bg-blue-600 rounded-lg shadow-md hover:bg-blue-700"
                >
                  +
                </button>
              </div>
            </div>
            <div class="col-span-3 flex justify-end items-center">
              <button
              onclick="removeMeal('${data._id}')"
                class="px-4 py-2 text-base font-semibold text-white bg-red-600 rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-red-200 cursor-pointer"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"
                  />
                </svg>
              </button>
            </div>
          </li>      
      `
      })
      mealList.innerHTML = list
      printNutritionFacts(selectedFoods)
    }
  }

  function increaseQuantity(id) {
    const result = lsIncreaseQuantity(id)
    printSelectedMeal(result)
  }
  function decreaseQuantity(id) {
    const result = lsDecreaseQuantity(id)
    printSelectedMeal(result)
  }
  function removeMeal(id) {
    const result = lsRemoveData(id)
    printSelectedMeal(result)
  }

  //Calculate Nutrition Facts
  function printNutritionFacts(array) {
    weightSpan.innerHTML = `${Number(
      array.reduce((acc, value) => acc + value.weight * value.quantity, 0)
    ).toFixed(2)}g`
    caloriesSpan.innerHTML = `Calories ${Number(
      array.reduce((acc, value) => acc + value.calories * value.quantity, 0)
    ).toFixed(2)}`
    caloriesFromFatSpan.innerHTML = `Calories from fat ${Number(
      array.reduce(
        (acc, value) => acc + value.caloriesFromFat * value.quantity,
        0
      )
    ).toFixed(2)}`
    fatSpan.innerHTML = `Total Fat ${Number(
      array.reduce((acc, value) => acc + value.fat * value.quantity, 0)
    ).toFixed(2)}g`
    cholesterolSpan.innerHTML = `Cholesterol ${Number(
      array.reduce((acc, value) => acc + value.cholesterol * value.quantity, 0)
    ).toFixed(2)}m.g`
    waterSpan.innerHTML = `Water ${Number(
      array.reduce((acc, value) => acc + value.water * value.quantity, 0)
    ).toFixed(2)}m.g`
    saltSpan.innerHTML = `Salt ${Number(
      array.reduce((acc, value) => acc + value.salt * value.quantity, 0)
    ).toFixed(2)}m.g`
    carbohydrateSpan.innerHTML = `Total Carbohydrates ${Number(
      array.reduce((acc, value) => acc + value.carbohydrate * value.quantity, 0)
    ).toFixed(2)}g`
    proteinSpan.innerHTML = `Protein ${Number(
      array.reduce((acc, value) => acc + value.protein * value.quantity, 0)
    ).toFixed(2)}g`
    energySpan.innerHTML = `Total Energy ${Number(
      array.reduce((acc, value) => acc + value.energy * value.quantity, 0)
    ).toFixed(2)}kj`

    // Show Nutrition Chart
    nutritionChart.classList.remove('hidden')

    // chart Functionalities
    const oldChart = Chart.getChart(ctx)
    if (typeof oldChart !== 'undefined') {
      oldChart.destroy()
    }
    const chartData = new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['Protein', 'Carbohydrate', 'Fat'],
        datasets: [
          {
            label: '%',
            data: [
              array.reduce(
                (acc, value) =>
                  acc + value.caloriesFromProtein * value.quantity,
                0
              ),
              array.reduce(
                (acc, value) =>
                  acc + value.caloriesFromCarbohydrate * value.quantity,
                0
              ),
              array.reduce(
                (acc, value) => acc + value.caloriesFromFat * value.quantity,
                0
              ),
            ],
            backgroundColor: [
              'rgba(0, 255, 255, 1)',
              'rgba(255, 214, 0, 1)',
              'rgba(240, 3, 125, 0.8)',
            ],
            borderColor: [
              'rgba(240, 157, 0, 0)',
              'rgba(240, 157, 0, 0)',
              'rgba(240, 157, 0, 0)',
            ],
            borderWidth: 4,
          },
        ],
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    })
  }
</script>
